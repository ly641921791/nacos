# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "2.2.4-ext-oracle-it" ]
  pull_request:
    branches: [ "2.2.4-ext-oracle-it" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    services:
      oracle:
        image: gvenzl/oracle-xe:18.4.0-faststart
        env:
          ORACLE_DATABASE: test
          APP_USER: test
          APP_USER_PASSWORD: test123456
        ports:
          - 1521:1521
        options: >-
          --health-cmd healthcheck.sh
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
    strategy:
      matrix:
        os: [ubuntu-latest]
        java: [8, 8.0.192, 11, 11.0.3]
    steps:
      - name: "Cache Maven Repos"
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Checkout"
        uses: actions/checkout@v3
      # - name: Set up DB
        # uses: gvenzl/setup-oracle-free@v1
        # uses: aalmiray/setup-oracledb@v1
        # with:
        #   oracle-database: test
        #   app-user: test
        #   app-user-password: test123456
      - name: "Set up JDK ${{ matrix.java }}"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'zulu'
          architecture: x64
      - name: "Print maven version"
        run: mvn -version
      - name: "Test Config"
        run: mvn clean package -Pcit-test -e -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
      - name: "Clean Env"
        run: mvn clean -Premove-test-data -e -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
      - name: "Test Naming"
        run: mvn clean package -Pnit-test -e -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
      - name: "Clean Env"
        run: mvn clean -Premove-test-data -e -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

